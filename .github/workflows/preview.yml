name: Deploy preview modpack
on:
  push:
    tags:
      - '*-preview'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::$(echo ${GITHUB_REF} | sed -e 's#refs/tags/##g' | awk -F'-' '{print $1}')
          echo ::set-output name=LEVEL::$(echo ${GITHUB_REF} | sed -e 's#refs/tags/##g' | awk -F'-' '{print $2}')

      - name: Set the version
        run: |
          MODPACKVERSION=v${{ steps.get_version.outputs.VERSION }}
          echo "GregTech Expert 2 ${MODPACKVERSION} ${{ steps.get_version.outputs.LEVEL }}" > ./overrides/resources/custommainmenu/version.txt
          sed -i -e "s/MODPACKVERSION/${MODPACKVERSION}/g" cf/manifest.json
          sed -i -e "s/MODPACKVERSION/${MODPACKVERSION}/g" mmc/instance.cfg

      - name: Copy CF manifest
        run: |
          cp -vf cf/manifest.json manifest.json
          cp -vf cf/modlist.html modlist.html
      
      - name: Archive Release CF
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}.zip
          exclusions: '*.git* .editorconfig LICENSE *.md */.github/* *serverfiles/* *buildtools/* *cf/* *mmc/*'

      - name: Delte CF manifest
        run: |
          rm -vf manifest.json
          rm -vf modlist.html

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f buildtools/requirements.txt ]; then pip install -r buildtools/requirements.txt; fi

      - name: Run Python
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: buildtools/server-install.py
      
      - name: Archive Release Server
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}-server.zip
          exclusions: '*.git* *.zip .editorconfig LICENSE *.md */.github/* *overrides/* *buildtools/* *cf/* *mmc/*'

      - name: Copy MMC manifest
        run: |
          cp -vf mmc/mmc-pack.json mmc-pack.json
          cp -vf mmc/instance.cfg instance.cfg

      - name: Rename Directory MMC
        run: mv -vf overrides .minecraft

      - name: Archive Release MMC
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}-mmc.zip
          exclusions: '*.git* *.zip .editorconfig LICENSE *.md */.github/* *overrides/* *buildtools/* *cf/* *mmc/*'

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          files: |
            ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}.zip
            ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}-mmc.zip
            ${{ github.workspace }}/GTExpert2-${{ steps.get_version.outputs.VERSION }}-${{ steps.get_version.outputs.LEVEL }}-server.zip
          generate_release_notes: true
